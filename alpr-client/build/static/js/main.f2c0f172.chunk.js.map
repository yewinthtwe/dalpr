{"version":3,"sources":["components/navBar.jsx","services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/membersTable.jsx","components/common/pagination.jsx","services/memberServices.jsx","utils/paginate.jsx","components/searchBox.jsx","components/members.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/memberForm.jsx","components/common/isAdmin.jsx","components/usersTable.jsx","services/userServices.jsx","components/users.jsx","components/userForm.jsx","components/loginForm.jsx","components/logout.jsx","components/InOutRecordTable.jsx","services/inOutRecordServices.jsx","components/inOutRecord.jsx","components/notFound.jsx","components/common/protectedRoute.jsx","components/CardUI.jsx","components/inOutRecordCard.jsx","services/laneServices.jsx","components/lanes.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","user","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Chip","icon","label","clickable","Fragment","_id","username","Typography","style","fontSize","component","init","console","log","error","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","password","a","http","apiUrl","data","localStorage","setItem","getCurrentUser","getItem","jwtDecode","ex","getJwt","login","loginWithjwt","logout","removeItem","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","map","key","onClick","Component","TableBody","renderCell","item","content","_","createKey","Table","MembersTable","member","licensePlate","deleteColumn","onDelete","auth","isAdmin","push","members","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","apiEndpoint","memberUrl","saveMember","body","deleteMember","paginate","items","pageNumber","startIndex","slice","take","value","SearchBox","onChange","name","placeholder","e","currentTarget","Members","state","searchQuery","handleAdd","setState","handleDelete","originalMembers","filter","v","handlePageChange","handleSearch","query","handleSort","getPagedData","allMembers","filtered","m","toString","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","aria-hidden","variant","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","autoComplete","MemberForm","memberName","address","obuId","string","required","min","number","history","member_id","match","params","mapToViewModel","replace","populateMember","onSubmit","renderInput","renderButton","classes","UsersTable","onIsAdmin","users","usersUrl","getUser","userId","saveUser","deleteUser","Users","originalUsers","u","handleIsAdmin","index","indexOf","allUsers","UserForm","boolean","populateUser","LoginForm","location","window","from","pathname","src","width","height","alt","Logout","InOutRecordTable","inOutRecord","p","imageUrl","Photo","inOutRecords","getInOutRecord","inOutRecordId","InOutRecord","allInOutRecords","forEach","mmTime","utcToZonedTime","Time","format","timeZone","convertTimezone","NotFound","ProtectedRoute","render","Card","imgsrc","title","InOutRecordCard","photo","CameraId","populateInOutRecord","imgFilename","getLaneStatus","ioModuleId","Lanes","gate1lanes","gate2lanes","camera1_url","camera2_url","camera3_url","camera4_url","handleClick","DO","relay","VLAUE","Grid","container","spacing","justify","xs","sm","align","CardMedia","image","CardContent","FormControlLabel","control","Switch","color","App","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f2c0f172.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport TrafficIcon from '@material-ui/icons/Traffic';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NavBar = ({user}) => {\r\n  \r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n       <span className=\"material-icons\" >control_camera</span>dalpr\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n        \r\n        \r\n          <NavLink className=\"nav-item nav-link\" to=\"/inOutRecord\">\r\n          <Chip icon={<EmojiTransportationIcon />} label=\"InOut\" clickable />\r\n          </NavLink>\r\n\r\n          <NavLink className=\"nav-item nav-link\" to=\"/members\">\r\n          <Chip icon={<AssignmentIndIcon />} label=\"Member\" clickable />\r\n          </NavLink>\r\n          \r\n          <NavLink className=\"nav-item nav-link\" to=\"/users\">\r\n          <Chip icon={<AccountBoxIcon />} label=\"SystemUser\" clickable />\r\n          \r\n          </NavLink>\r\n\r\n          <NavLink className=\"nav-item nav-link\" to=\"/lanes\">\r\n          <Chip icon={<TrafficIcon />} label=\"LaneControl\" clickable />\r\n          \r\n          </NavLink>\r\n\r\n          { !user &&\r\n          <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n          <Chip icon={<ExitToAppIcon />} label=\"Login\" clickable />\r\n          </NavLink>\r\n          </React.Fragment>\r\n          }\r\n          { user &&\r\n          <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to={`/users/${user._id}`}>\r\n            <Chip icon={<FaceIcon />} label={user.username} clickable />\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n            <Chip icon={<MeetingRoomIcon />} label=\"Logout\" clickable />\r\n          </NavLink>\r\n\r\n          </React.Fragment>\r\n          }\r\n        </div>\r\n      </div>\r\n      <span className=\"navbar-text\">\r\n      <Typography style={{fontSize: 10}} component=\"p\">\r\n       Evaluation Copy. Build.20200923002 | <CopyrightIcon fontSize=\"small\"> </CopyrightIcon> 2020 | Q-Free ASA\r\n      </Typography>\r\n    </span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","function init () {\r\n console.log(\"Logservice is called\");\r\n}\r\n\r\nfunction log(error){\r\nconsole.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n};","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport logger from \"./logService\";\r\n\r\nfunction setJwt(jwt){\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n    \r\n    if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured.\");\r\n    }\r\n    return Promise.reject(error);\r\n  }); \r\n\r\n  \r\n  export default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n  };","import jwtDecode from 'jwt-decode';\r\nimport { apiUrl } from '../config.json';\r\nimport http from \"./httpService\";\r\n\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(username, password) {\r\n    const { data: jwt } = await http.post(apiUrl + '/auth', { username, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithjwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout () {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser (){\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n        \r\n      }\r\n      catch (ex) {  return null; }\r\n}\r\n\r\nexport function getJwt (){\r\n return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithjwt,\r\n    logout,\r\n    getJwt,\r\n    getCurrentUser \r\n}","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport auth from '../services/authService';\nimport Table from \"./common/table\";\n//import Like from \"./common/like\";\n\nclass MembersTable extends Component {\n  columns = [\n    { path: \"licensePlate\", label: \"License Plate\", content: member => <Link to={`/members/${member._id}`}>{member.licensePlate}</Link> },\n    { path: \"memberName\", label: \"Member Name\" },\n    { path: \"address\", label: \"Address\" },\n    { path: \"registrationDate\", label: \"Registration Date\" },\n    { path: \"obuId\", label: \"OBU\" },\n  ];\n\n  deleteColumn =  {\n      key: \"delete\",\n      content: member => (\n        <button\n          onClick={() => this.props.onDelete(member)}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      )\n};\n\nconstructor() {\n  super();\n  const user = auth.getCurrentUser();\n  if(user && user.isAdmin) \n    this.columns.push(this.deleteColumn);\n}\n\n  render() {\n    const { members, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={members}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MembersTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <p className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from './httpService';\r\nimport {apiUrl} from '../config.json';\r\n\r\nconst apiEndpoint = apiUrl + \"/members\";\r\n\r\nfunction memberUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMembers() {\r\n    return http.get(apiEndpoint);\r\n  }\r\n\r\nexport function getMember(id) {\r\n    return http.get(memberUrl(id));\r\n  }\r\n\r\n  export function saveMember(member) {\r\n    if (member._id) {\r\n      const body = {...member};\r\n      delete body._id;\r\n      return http.put(memberUrl(member._id), body);\r\n    }\r\n    return http.post(apiEndpoint, member);\r\n  }\r\n\r\nexport function deleteMember(id) {\r\n    return http.delete(memberUrl(id));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate (items, pageNumber , pageSize) {\r\nconst startIndex = ( pageNumber - 1 * pageSize );\r\nreturn _(items)\r\n.slice(startIndex)\r\n.take(pageSize)\r\n.value();\r\n}","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MembersTable from \"./membersTable\";\nimport Pagination from \"./common/pagination\";\nimport { getMembers, deleteMember, saveMember } from \"../services/memberServices\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Members extends Component {\n  state = {\n    members: [],\n    currentPage: 1,\n    pageSize: 10,\n    searchQuery: \"\",\n    sortColumn: { path: \"licensePlate\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data: members } = await getMembers();\n    this.setState({ members });\n  }\n\n  handleAdd = async () => {\n    const { data: member } = await saveMember();\n    const members = [member, ...this.state.members];\n    this.setState({ members });\n   };\n    \n  handleDelete = async member => {\n    const originalMembers = this.state.members;\n    const members = originalMembers.filter(v => v._id !== member._id);\n    this.setState({ members });\n    try {\n      await deleteMember(member._id);\n    }\n    catch (ex) {\n      if (ex.response && ex.response.status === 404)\n      toast.error('This member may have been deleted already');\n      this.setState({ members: originalMembers });\n    }\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery,\n      members: allMembers\n    } = this.state;\n\n    let filtered = allMembers;\n    if (searchQuery)\n      filtered = allMembers.filter(m =>\n        m.licensePlate.toString().toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const members = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: members };\n  };\n\n  render() {\n    const { length: count } = this.state.members;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <div>\n    <Typography component=\"p\">There is no member registered.</Typography>;\n    <Link \n          to='/members/new' className='btn btn-primary m-2'\n          style={{marginBottom:20}}>\n            New Member <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n          </Link>\n      \n    </div>;\n\n    const { totalCount, data: members } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <Typography variant=\"h5\" component=\"h5\">\n            Registered Members\n          </Typography>\n          <Typography component=\"p\">\n            Total {totalCount} member.\n          </Typography>\n          <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n          <MembersTable\n            members={members}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          \n          { user && (\n          <Link \n          to='/members/new' className='btn btn-primary m-2'\n          style={{marginBottom:20}}>\n            New Member <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n          </Link>\n          )}\n          \n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Members;\n\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        autoComplete={name}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMember, saveMember } from '../services/memberServices';\n\nclass MemberForm extends Form {\n  state = {\n    data: {\n      licensePlate: \"\",\n      memberName: \"\",\n      address:\"\",\n      obuId: 123456789012,\n    },\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    \n    licensePlate: Joi.string()\n      .required()\n      .label(\"License Plate\"),\n    memberName: Joi.string()\n      .required()\n      .min(6)\n      .label(\"Member Name\"),\n    address: Joi.string()\n      .required()\n      .min(6)\n      .label(\"Address\"),\n    obuId: Joi.number()\n      .required()\n      .label(\"OBU\")\n  };\n\n  async populateMember(){\n    try {\n      const member_id = this.props.match.params.id;\n      if ( member_id === \"new\") return;\n      const { data: member } = await getMember( member_id );\n      this.setState({ data: this.mapToViewModel( member ) });\n\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) this.props.history.replace('/not-found');\n    }\n }\n\n  async componentDidMount() {\n   await this.populateMember();\n  }\n  \n  mapToViewModel( member ) {\n    return {\n      _id: member._id,\n      licensePlate: member.licensePlate,\n      memberName: member.memberName,\n      address: member.address,\n      obuId: member.obuId\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMember(this.state.data);\n    this.props.history.push(\"/members\");\n  };\n  \n  render(){\n    return (\n    <div>\n      <h4> Member </h4>\n      <form onSubmit={this.handleSubmit}>\n        {this.renderInput('licensePlate', 'License Plate')}\n        {this.renderInput('memberName', 'Member Name')}\n        {this.renderInput('address', 'Address')}\n        {this.renderInput('obuId', 'OBU')}\n        {this.renderButton('Save')}\n      </form>\n    </div>\n    )\n    \n  }\n}\n\nexport default MemberForm;\n","import React from \"react\";\n\nconst isAdmin = props => {\n  let classes = \"fa fa-check\";\n  if (!props.isAdmin) classes = \"fa fa-times\";\n  return (\n    <i\n      //onClick={props.onClick}\n      // style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n//fa fa-toggle-on\nexport default isAdmin;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport auth from '../services/authService';\nimport Role from \"./common/isAdmin\";\nimport Table from \"./common/table\";\n\nclass UsersTable extends Component {\n\n  columns = [\n    {\n      path: \"username\",\n      label: \"Username\",\n      content: user => <Link to={`/users/${user._id}`}>{user.username}</Link>\n    },\n    { path: \"password\", label: \"Password\", type: \"password\" },\n    { path: \"reg_date\", label: \"RegistrationDate\" },\n    {\n      path: \"role\", label: \"Admin\", key: \"role\",\n      content: user => (\n        <Role isAdmin={user.isAdmin} onClick={() => this.props.onIsAdmin(user)} />\n      )\n    },\n  ];\n\n  deleteColumn =  {\n      key: \"delete\",\n      content: user => ( \n        <button\n          onClick={() => this.props.onDelete(user)}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      )\n  };\n  \n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if(user && user.isAdmin) \n      this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { users, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={users}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default UsersTable;\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = apiUrl + \"/users\";\r\n\r\nfunction usersUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getUsers() {\r\n    return http.get(apiEndpoint);\r\n  }\r\n\r\nexport function getUser(userId) {\r\n    return http.get(usersUrl(userId));\r\n  }\r\n\r\n  export function saveUser(user) {\r\n    if (user._id) {\r\n      const body = {...user};\r\n      delete body._id;\r\n      return http.put(usersUrl(user._id), body);\r\n    }\r\n    return http.post(apiEndpoint, user);\r\n  }\r\n\r\nexport function deleteUser(userId) {\r\n    return http.delete(usersUrl(userId));\r\n}\r\n","import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport UserTable from \"./usersTable\";\nimport Pagination from \"./common/pagination\";\nimport { getUsers, deleteUser, saveUser } from \"../services/userServices\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Users extends Component {\n  state = {\n    users: [],\n    currentPage: 1,\n    pageSize: 10,\n    searchQuery: \"\",\n    sortColumn: { path: \"username\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data: users } = await getUsers();\n    this.setState({ users });\n  }\n\n  handleAdd = async () => {\n    const { data: user } = await saveUser();\n    const users = [user, ...this.state.users];\n    this.setState({ users });\n   };\n    \n  handleDelete = async user => {\n    const originalUsers = this.state.users;\n    const users = originalUsers.filter(u => u._id !== user._id);\n    this.setState({ users });\n    try {\n      await deleteUser(user._id);\n    }\n    catch (ex) {\n      if (ex.response && ex.response.status === 404)\n      toast.error('This user may have been deleted already');\n      this.setState({ users: originalUsers });\n    }\n  };\n\n  handleIsAdmin = user => {\n    const users = [...this.state.users];\n    const index = users.indexOf(user);\n    users[index] = { ...users[index] };\n    users[index].isAdmin = !users[index].isAdmin;\n    this.setState({ users });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery,\n      users: allUsers\n    } = this.state;\n\n    let filtered = allUsers;\n    if (searchQuery)\n      filtered = allUsers.filter(m =>\n        m.username.toString().toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const users = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: users };\n  };\n\n  render() {\n    const { length: count } = this.state.users;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    //const { user } = this.props;\n    \n    if (count === 0) return <div> <Typography component=\"p\">There is no System user.</Typography>; <Link \n    to='/users/new' className='btn btn-primary m-2'\n    style={{marginBottom:20}}>\n      New User <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n    </Link> </div> ;\n\n\n    const { totalCount, data: users } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n           <Typography variant=\"h5\" component=\"h5\">\n             System Users\n           </Typography>\n           <Typography component=\"p\">\n            Total {totalCount} system user.\n          </Typography>\n          <SearchBox value={ searchQuery } onChange={ this.handleSearch }/>\n          \n          <UserTable\n            users={users}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          \n          <Link \n          to='/users/new' className='btn btn-primary m-2'\n          style={{marginBottom:20}}>\n            New User <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n          </Link>\n\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { saveUser, getUser } from '../services/userServices';\n\nclass UserForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name:\"\",\n      isAdmin: false\n    },\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    username: Joi.string()\n      .required()\n      .min(6)\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(6)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .min(6)\n      .label(\"Name\"),\n    isAdmin: Joi.boolean(),\n  };\n\n  async populateUser(){\n    try {\n      const userId = this.props.match.params.id;\n      if ( userId === \"new\") return;\n      const { data: user } = await getUser( userId );\n      this.setState({ data: this.mapToViewModel( user ) });\n    } \n    catch (ex) {\n      if (ex.response && ex.response.status === 404) this.props.history.replace('/not-found');\n    }\n  }\n\n  async componentDidMount() {\n   await this.populateUser();\n  }\n  \n  mapToViewModel(user) {\n    return {\n      _id: user._id,\n      username: user.username,\n      password: user.password,\n      name: user.name,\n      isAdmin: user.isAdmin\n    };\n  }\n\n  doSubmit = async () => {\n    await saveUser(this.state.data);\n    this.props.history.push(\"/users\");\n  };\n  \n  render(){\n    return (\n    <div>\n      <h4>System user</h4>\n      <form onSubmit={this.handleSubmit}>\n        {this.renderInput('username', 'Username')}\n        {this.renderInput('password', 'Password')}\n        {this.renderInput('name', 'Name')}\n        {this.renderInput('isAdmin','IsAdmin')}\n        {this.renderButton('Save')}\n      </form>\n    </div>\n    )\n  }\n}\n\nexport default UserForm;\n","import React from \"react\";\nimport {Redirect} from 'react-router-dom';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : '/';\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState ({ errors });\n      }\n\n    }\n    \n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to='/' />;\n    return (\n      <div>\n        <img src=\"/diamond_logo.png\" width=\"80\" height=\"50\" alt=\"dip logo\" />\n        <h6>Vehicle Access Control System</h6>\n        <h4>Login</h4>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\ncomponentDidMount() {\r\nauth.logout();\r\nwindow.location = '/';\r\n}\r\n\r\n    render() { \r\n        return  null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport {Img} from 'react-image'\r\nimport { imageUrl } from '../config.json';\r\n\r\nclass InOutRecordTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"licensePlate\",\r\n      label: \"License Plate\",\r\n      content: inOutRecord => <Link to={`/inOutRecord/${inOutRecord._id}`}> {inOutRecord.licensePlate} </Link>\r\n    },\r\n\r\n    { path: \"Time\", label: \"Time\" },\r\n    { \r\n      path: \"Photo\", \r\n      label: \"Photo\",\r\n      content: p => <Img  alt=\"\" \r\n                          src={`${imageUrl}${p.Photo}`} \r\n                          width=\"80\" \r\n                          height=\"50\"/>\r\n    },\r\n    { path: \"CameraId\", label: \"Camera ID\" },\r\n    { path: \"Direction\", label: \"Direction\"}\r\n];\r\n\r\n  render() {\r\n    const { inOutRecords, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n\r\n      <Table\r\n        columns={this.columns}\r\n        data={inOutRecords}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default InOutRecordTable;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst apiEndpoint = apiUrl + \"/inOutRecord\";\r\n\r\nfunction inOutRecordUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n  }\r\n  \r\nexport function getInOutRecords() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getInOutRecord(inOutRecordId) {\r\n    return http.get(inOutRecordUrl(inOutRecordId));\r\n  }","import React, { Component } from \"react\";\r\nimport InOutRecordTable from \"./InOutRecordTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getInOutRecords } from \"../services/inOutRecordServices\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { utcToZonedTime, format } from 'date-fns-tz'\r\n\r\nclass InOutRecord extends Component {\r\n  state = {\r\n    inOutRecords: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    searchQuery: \"\",\r\n    sortColumn: { path: \"Time\", order: \"desc\" }\r\n  };\r\n\r\n convertTimezone (inOutRecords) {\r\n  const timeZone = 'Asia/Yangon';\r\n\r\n   _.forEach(inOutRecords, function (key,value) {\r\n    let mmTime = utcToZonedTime(key.Time, timeZone);\r\n    mmTime = format(mmTime, 'yyyy-MM-dd HH:mm:ss', { timeZone: timeZone }) \r\n    key.Time = mmTime;\r\n  });\r\n  return inOutRecords;\r\n }\r\n\r\n  async componentDidMount() {\r\n    let { data: inOutRecords } = await getInOutRecords();\r\n    inOutRecords = this.convertTimezone(inOutRecords);\r\n    this.setState({ inOutRecords });\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      searchQuery,\r\n      inOutRecords: allInOutRecords\r\n    } = this.state;\r\n\r\n    let filtered = allInOutRecords;\r\n    if (searchQuery)\r\n    filtered = allInOutRecords.filter(m =>\r\n      m.licensePlate.toString().toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n  \r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const inOutRecords = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: inOutRecords };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.inOutRecords;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n    if (count === 0) return <Typography component=\"p\">There is no InOut record.</Typography>;\r\n\r\n    const { totalCount, data: inOutRecords } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Typography variant=\"h5\" component=\"h5\">\r\n            InOut records\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Showing {totalCount} InOut record.\r\n          </Typography>\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <InOutRecordTable\r\n            inOutRecords={inOutRecords}\r\n            sortColumn={sortColumn}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InOutRecord;\r\n\r\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getCurrentUser } from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return(\r\n        <Route \r\n        {...rest}\r\n        render={ props => {\r\n            if (!getCurrentUser()) return <Redirect to={{ pathname: '/login',\r\n            state: { from: props.location} }} />;\r\n            return Component ? <Component {...props} /> : render(props);\r\n        }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport './card-styles.css';\r\n\r\nconst Card = props => {\r\n    //console.log(props);\r\nreturn (\r\n    <div className=\"card text-center shadow\">\r\n        <div className=\"overflow\">\r\n            <img src={props.imgsrc} alt=\"imageOne\" className=\"card-img-top\"/>\r\n        </div>\r\n        <div className=\"card-body text-dark\">\r\n            <h4 className=\"card-title\">{props.title}</h4>\r\n            {/* <p className=\"card-text text-secondary\" /> */}\r\n            <dl className=\"row\">\r\n                <dt className=\"col-sm-4\">Time</dt>\r\n                    <dd className=\"col-sm-20\">{props.data.Time}</dd>\r\n            </dl>\r\n             <button onClick={props.onSubmit} className=\"btn btn-outline-success\">GoBack</button>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\nexport default Card;","import React, { Component }  from \"react\";\r\nimport { getInOutRecord } from '../services/inOutRecordServices';\r\nimport Card from './CardUI';\r\n\r\nconst imageUrl = \"http://localhost:30000/plateimages/\";\r\n\r\nclass InOutRecordCard extends Component {\r\n  state = {\r\n    data: {\r\n        _id: \"\",\r\n        licensePlate: \"\",\r\n        photo: \"\",\r\n        Time: \"\",\r\n        CameraId: 0,\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  async populateInOutRecord(){\r\n      const inOutRecordId = this.props.match.params.id;\r\n      const { data: inOutRecord } = await getInOutRecord(inOutRecordId);\r\n      //console.log(inOutRecord);\r\n      this.setState({ data: this.mapToViewModel( inOutRecord ) });\r\n  }\r\n\r\n  async componentDidMount() {\r\n   await this.populateInOutRecord();\r\n  }\r\n  \r\n  mapToViewModel(inOutRecord) {\r\n    return {\r\n      _id: inOutRecord._id,\r\n      licensePlate: inOutRecord.licensePlate,\r\n      Photo: inOutRecord.Photo,\r\n      Time: inOutRecord.Time,\r\n      CameraId: inOutRecord.CameraId,\r\n    };\r\n  }\r\n\r\n  doSubmit = () => {\r\n    //await saveGateUser(this.state.data);\r\n    this.props.history.push(\"/inOutRecord\");\r\n  };\r\n  \r\n  render(){\r\n\r\n      const imgFilename = this.state.data.Photo;\r\n      const imgsrc = `${imageUrl}${imgFilename}`;\r\n      //console.log(this.props);\r\n    \r\n    return (\r\n    <div>\r\n      <Card\r\n        data={this.state.data}\r\n        imgsrc={imgsrc}\r\n        title={this.state.data.licensePlate}\r\n        onSubmit={this.doSubmit} > \r\n      </Card>\r\n    </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default InOutRecordCard;\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\nconst apiEndpoint = apiUrl + \"/lane\";\r\n\r\nexport function getLaneStatus( ioModuleId ) {\r\n    return http.get(`${apiEndpoint}/${ioModuleId}`);\r\n}\r\n\r\nexport function setLaneValue( ioModuleId, relayId, relayValue ) {\r\n    const body = {};\r\n    body.ioModuleId = ioModuleId;\r\n    body.relayId = relayId;\r\n    body.relayValue = relayValue;\r\n    return http.post(apiEndpoint, body);\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n//import Relays from './lanes';\r\n//import { toast } from 'react-toastify';\r\nimport { getLaneStatus } from \"../services/laneServices\";\r\n\r\nclass Lanes extends Component {\r\n  \r\n  state = {\r\n    gate1lanes: [],\r\n    gate2lanes: [],\r\n    camera1_url: \"http://192.168.100.101/video.mjpg?user=root&pw=koye6477\",\r\n    camera2_url: \"http://192.168.100.103/video.mjpg?user=root&pw=koye6477\",\r\n    camera3_url: \"http://192.168.100.110/video.mjpg?user=root&pw=koye6477\",\r\n    camera4_url: \"http://192.168.100.101/video.mjpg?user=root&pw=koye6477\",\r\n  \r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: gate1lanes } = await getLaneStatus(\"1\");\r\n    const { data: gate2lanes } = await getLaneStatus(\"2\");\r\n    gate1lanes[0].DO.length = 2;\r\n    gate2lanes[0].DO.length = 2;\r\n    \r\n    this.setState({ gate1lanes, gate2lanes });\r\n  }\r\n\r\n  handleClick = () => {\r\n    const data = this.state.gate1lanes[0].DO;\r\n    data.map( relay => ( relay.VLAUE ));\r\n  }\r\n \r\n  render()  {\r\n\r\n    return ( \r\n    <div >\r\n      <Grid container spacing={2} justify='center'>\r\n        <Grid item xs={3} sm={3}>\r\n          <Typography align=\"center\" variant=\"h5\"> East Gate </Typography>\r\n          <Card onClick={this.handleClick}>\r\n            <Typography align=\"center\" variant=\"subtitle1\"> IN </Typography>\r\n            <CardMedia component=\"img\" title=\"Camera 1\" image={this.state.camera1_url} />\r\n            <CardContent> \r\n            <Typography variant=\"subtitle2\"> ALB status</Typography>\r\n            <FormControlLabel\r\n              disabled control={<Switch color=\"primary\" />}\r\n              label=\"Control ALB\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={3} sm={3}>\r\n          <Typography align=\"center\" variant=\"h5\"> East Gate </Typography>\r\n          <Card>\r\n            <Typography align=\"center\" variant=\"subtitle1\"> OUT </Typography>\r\n            <CardMedia component=\"img\" title=\"Camera 2\" image={this.state.camera2_url} />\r\n            <CardContent> \r\n            <Typography variant=\"subtitle2\"> ALB status</Typography>\r\n            <FormControlLabel\r\n              disabled control={<Switch color=\"primary\" />}\r\n              label=\"Control ALB\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={3} sm={3}>\r\n          <Typography align=\"center\" variant=\"h5\"> West Gate </Typography>\r\n          <Card>\r\n            <Typography align=\"center\" variant=\"subtitle1\"> IN </Typography>\r\n            <CardMedia component=\"img\" title=\"Camera 3\" image={this.state.camera3_url} />\r\n            <CardContent> \r\n            <Typography variant=\"subtitle2\"> ALB status</Typography>\r\n            <FormControlLabel\r\n              disabled control={<Switch color=\"primary\" />}\r\n              label=\"Control ALB\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={3} sm={3}>\r\n          <Typography align=\"center\" variant=\"h5\"> West Gate </Typography>\r\n          <Card>\r\n            <Typography align=\"center\" variant=\"subtitle1\"> OUT</Typography>\r\n            <CardMedia component=\"img\" title=\"Camera 4\" image={this.state.camera4_url} />\r\n            <CardContent> \r\n            <Typography variant=\"subtitle2\"> ALB status</Typography>\r\n            <FormControlLabel\r\n              disabled control={<Switch color=\"primary\" />}\r\n              label=\"Control ALB\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n   );\r\n  }\r\n}\r\n\r\nexport default Lanes;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport NavBar from \"./components/navBar\";\r\nimport Members from \"./components/members\";\r\nimport MemberForm from './components/memberForm';\r\nimport Users from \"./components/users\";\r\nimport UserForm from \"./components/userForm\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport Logout from './components/logout';\r\n//import Relays from \"./components/relays\";\r\nimport InOutRecord from \"./components/inOutRecord\";\r\nimport auth from './services/authService';\r\nimport NotFound from \"./components/notFound\";\r\nimport ProtectedRoute from './components/common/protectedRoute';\r\nimport InOutRecordCard from \"./components/inOutRecordCard\";\r\n//import MyCards from './components/Cards';\r\nimport Lanes from './components/lanes';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = { };\r\n  \r\n  componentDidMount() {\r\n    const user = auth.getCurrentUser();\r\n    this.setState({user});\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer></ToastContainer>\r\n        <NavBar user={user} />\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <ProtectedRoute path=\"/users/:id\" component={UserForm} />\r\n            <Route path=\"/users\" component={Users} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/lanes\" component={Lanes} />\r\n\r\n            <ProtectedRoute path=\"/members/:id\" component={MemberForm} />\r\n            <Route path=\"/members\" render={props => <Members {...props} user={this.state.user} \r\n            />} />\r\n            <ProtectedRoute path=\"/inOutRecord/:id\" component={InOutRecordCard} />\r\n            <Route path=\"/inOutRecord\" render={props => <InOutRecord {...props} user={this.state.user}/>} />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect from=\"/\" exact to=\"/inOutRecord\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}